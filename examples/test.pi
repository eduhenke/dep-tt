nat : Type
nat = (x : Type) -> x -> (x->x) -> x

z : nat
z = λx. λzf. λsf. zf

s : nat -> nat
s = λn. λx. λzf. λsf. sf (n x zf sf)

one = s z
two = s one

plus : nat -> nat -> nat
plus = λx. λy. x nat y s

plus_zero_n : (n : nat) -> ((plus z n) = n)
plus_zero_n = \n. Refl
